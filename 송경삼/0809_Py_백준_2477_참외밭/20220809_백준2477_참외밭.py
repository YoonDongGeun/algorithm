r=[4,3,1,2] #반시계방향으로 부터 왔는지 알아볼 리스트이자 함수입니다.
            # ex) 1(동,항번호+1)의 값이 4(북)입니다. 
            # 이런 방식으로 반시계 방향이 맞는지 확인할 수 있습니다.
N=int(input())  #참외개수를 받습니다
L=[]        #값을 저장할 리스트입니다.
X,Y,S,m2=0,0,0,0    #순서대로 X축,Y축,이동방향,작은사각형 변2 입니다.
for i in range(6):  #육각형만큼 순회합니다.
    s,d=map(int,input().split())    #인풋을받고
    if i!=0:    #초항이면 넘어가고 아니면 검사합니다.
        if r[S-1]!=s:   #이번 이동이 반시계방향회전이 아닌건지 검사합니다.
            m1=d        #반시계가 아니면 작은 사각형의 변으로 저장합니다.
            m2=L[-1]    #작은사각형의 두번째변은 바로 전 길이입니다.
    L+=[d]  #L에 값을 추가합니다.
    S=s #s를 갱신합니다.
    if (s==1 or s==2) and d>X:X=d   #X의 최대길이를 갱신합니다.
    if (s==3 or s==4) and d>Y:Y=d   #Y의 최대길이를 갱신합니다.
if m2==0:   #m2가 갱신되지 않았다면 움푹파인 꼭지점에서 출발한겁니다.
    m1=L[0] #그러니까 초항이 작은 사각형의 변1이고
    m2=L[-1] #끝항이 작은 사각형의 변2입니다.
print(N*(X*Y-m1*m2))    #큰사각형의 넓이에서 작은 사각형을 빼 정답을 출력합니다.